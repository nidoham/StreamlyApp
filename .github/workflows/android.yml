# This file should be located at .github/workflows/android-ci.yml

name: Android CI - Build Signed APK

on:
  push:
    branches: [ "main", "develop" ]
  release:
    types: [ published ]

env:
  # FIX: Use _JAVA_OPTIONS to forcefully set the JVM heap size to 4GB.
  # This prevents the OutOfMemoryError during the R8 task by overriding any
  # memory settings specified in gradle.properties for the CI environment.
  _JAVA_OPTIONS: "-Xmx4g"
  
  # Set Gradle-specific options. We let gradle.properties handle most settings.
  GRADLE_OPTS: -Dorg.gradle.workers.max=2

jobs:
  build-signed-apk:
    name: 🚀 Build Signed APK (using Debug Key)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️ Set up Gradle
        # This action smartly caches dependencies based on your gradle-wrapper.properties
        # and respects the settings in your gradle.properties file.
        uses: gradle/actions/setup-gradle@v3

      - name: 🔓 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔐 Ensure debug keystore directory exists
        # This step ensures the default debug.keystore can be generated by the Android Gradle Plugin.
        run: |
          mkdir -p ~/.android
          echo "Default Android debug keystore directory is ready."

      - name: 🏗️ Build release APK (using default debug keystore)
        # This build will use the settings from gradle.properties (like config cache)
        # and the overriding memory settings from the _JAVA_OPTIONS environment variable.
        run: ./gradlew assembleRelease --stacktrace

      - name: 📁 List release APK files
        run: |
          echo "Release APK files (signed with debug key):"
          find app/build/outputs/apk/release -name "*.apk" -type f || echo "No release APK files found"
          
      - name: 📤 Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk-${{ github.run_number }}
          path: app/build/outputs/apk/release/*.apk
          retention-days: 90

  create-build-summary:
    name: 📄 Create Build Summary
    runs-on: ubuntu-latest
    needs: [build-signed-apk]
    if: always() # Run this even if the build fails to report the status

    steps:
      - name: 📄 Create comprehensive summary
        run: |
          echo "## 🚀 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛠️ Build Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **JDK Version:** 17 (Temurin)" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit SHA:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Signing:** Default Android debug keystore" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Job Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Signed APK:** ${{ needs.build-signed-apk.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Artifacts Generated" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.build-signed-apk.result }}" == "success" ]]; then
            echo "- 🚀 Signed APK - using Debug Key (signed-apk-${{ github.run_number }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "- No artifacts were generated due to a build failure." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Notes" >> $GITHUB_STEP_SUMMARY
          echo "- **Important:** The 'Signed APK' is signed with the default **debug keystore** for CI/testing purposes. It is **not** a production-ready build." >> $GITHUB_STEP_SUMMARY
          echo "- The JVM heap size was set to **4GB** in the CI environment to ensure the build completed without memory errors." >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "- This is a **release build** triggered by a new tag/release event on GitHub." >> $GITHUB_STEP_SUMMARY
          fi
